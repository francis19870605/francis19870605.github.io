<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-06-09T08:43:28.857Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Francis wwj</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/06/09/%E4%BD%BF%E7%94%A8hexo%20+%20github%20%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2017/06/09/使用hexo + github 搭建博客/</id>
    <published>2017-06-09T06:22:08.605Z</published>
    <updated>2017-06-09T08:43:28.857Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搭建流程："><a href="#搭建流程：" class="headerlink" title="搭建流程："></a>搭建流程：</h3><ul>
<li><p>hexo是个博客框架，编辑好博客后，用在git shell上，gitshell上有个 hexo generate 命令就能生成一个静态页面。这个网站可以在本地看也可以在网上看，如果在网上看就需要上传到网站上，github上刚好有个github pages就有这个功能。新建一个yourname.github.io仓库、这个特殊仓库会自动把github pages功能打开，也就是说会自动把这个仓库中的master里的html静态文件显示到 <a href="http://yourname.github.io" target="_blank" rel="external">http://yourname.github.io</a> 这个网站上。</p>
</li>
<li><p>Gighub Pages介绍：<br><br>Gighub Pages是一个免费的静态网站托管平台，但是由于他的空间免费稳定、免流量费、所以做博客也不是不错的。每个账号只能有一个仓库来存放个人主页、而且仓库的名字必须是yourname.github.io这个特殊的命名约定。个人主页的网站内容还必须放在mster分之下，创建之后可以通过 <a href="http://yourname.github.io" target="_blank" rel="external">http://yourname.github.io</a> 来访问。</p>
</li>
</ul>
<h3 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h3><h4 id="下载-Git-并安装"><a href="#下载-Git-并安装" class="headerlink" title="下载 Git 并安装"></a>下载 Git 并安装</h4><ul>
<li><p>登录github <a href="https://github.com/" target="_blank" rel="external">https://github.com/</a> 注册一个账号。注册账号时候起的名字就是你的【yourname】，以后会经常用到。</p>
</li>
<li><p>下载桌面端github <a href="https://desktop.github.com/" target="_blank" rel="external">https://desktop.github.com/</a> 下一步安装即可。安装结束后，空白桌面右键会多出两个Git  GUI Here和Git Bash Here。<br><br> # 在Git Bash 中  可以使用 <code>$ git --version</code> 查看安装版本</p>
</li>
</ul>
<h4 id="下载-Node-JS-并安装"><a href="#下载-Node-JS-并安装" class="headerlink" title="下载 Node.JS 并安装"></a>下载 Node.JS 并安装</h4><ul>
<li>下载Node.JS LTS稳定版<a href="https://nodejs.org/en/。" target="_blank" rel="external">https://nodejs.org/en/。</a> 默认会安装npm。<br><br> # Node.JS是Javascrip运行环境，npm是Nodj.JS包管理和分发工具<br><br> # <code>node -v</code>  #查看node版本<br><br> # <code>npm -v</code>   #查看npm版本</li>
</ul>
<h4 id="下载-hexo-并安装"><a href="#下载-hexo-并安装" class="headerlink" title="下载 hexo 并安装"></a>下载 hexo 并安装</h4><ul>
<li>空白桌面右键打开Git Bash、输入 <code>$ npm install -g hexo-cli</code> 回车。<br>(使用npm包管理工具安装hexo)</li>
</ul>
<h3 id="使用hexo搭建本地博客"><a href="#使用hexo搭建本地博客" class="headerlink" title="使用hexo搭建本地博客"></a>使用hexo搭建本地博客</h3><h4 id="创建博客根目录"><a href="#创建博客根目录" class="headerlink" title="创建博客根目录"></a>创建博客根目录</h4><ul>
<li>新建一个文件夹、eg：d:\MyBlog</li>
</ul>
<h4 id="初始化生成博客模板"><a href="#初始化生成博客模板" class="headerlink" title="初始化生成博客模板"></a>初始化生成博客模板</h4><ul>
<li>进入该文件夹、右键Git Bash Here 在弹出的命令行输入 <code>$ hexo init</code>  或者 直接在D:\下 右键Git Bash Here，输入  <code>$ hexo init MyBlog</code>。<br><br> # 这个MyBlog就是博客的根目录、初始化生成模板之后会多出一些文件)</li>
</ul>
<h4 id="安装git插件"><a href="#安装git插件" class="headerlink" title="安装git插件"></a>安装git插件</h4><ul>
<li>为hexo安装插件 “hexo-deployer-git”，输入 <code>$ npm install hexo-deployer-git --save</code>。<br><br> # 这个插件是用来向github中上传html时用到的、安装好之后可以在$blog\node_modules中看到。不安装直接<code>$ hexo d</code> 会弹出”error deployer not found:git”这个错误。</li>
<li>生成静态页面 <code>$ hexo g</code>。<br><br> # 执行此命令会在根目录下生成一个新的public的文件夹。</li>
</ul>
<h4 id="启动服务并测试"><a href="#启动服务并测试" class="headerlink" title="启动服务并测试"></a>启动服务并测试</h4><ul>
<li><p>启动服务 <code>$ hexo s</code>。同时会在当前目录生成一个新的叫public的文件夹。</p>
</li>
<li><p>本地预览 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></p>
</li>
</ul>
<h3 id="主题设置"><a href="#主题设置" class="headerlink" title="主题设置"></a>主题设置</h3><h4 id="安装yilia主题"><a href="#安装yilia主题" class="headerlink" title="安装yilia主题"></a>安装yilia主题</h4><ul>
<li>这里以主题yilia为例说明：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo clean</div><div class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="启用主题"><a href="#启用主题" class="headerlink" title="启用主题"></a>启用主题</h4><ul>
<li>修改根目录下的_config.yml配置文件中的theme属性，将其设置为yilia。</li>
</ul>
<h4 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a>更新主题</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ cd themes/yilia</div><div class="line">$ git pull</div><div class="line">$ hexo g</div><div class="line">$ hexo s</div></pre></td></tr></table></figure>
<h4 id="补充命令"><a href="#补充命令" class="headerlink" title="补充命令"></a>补充命令</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">hexo常用命令：</div><div class="line">$ hexo new <span class="string">"PostName"</span>           <span class="comment">#新建文章</span></div><div class="line">$ hexo new pate <span class="string">"PageName"</span>      <span class="comment">#新建页面</span></div><div class="line"></div><div class="line">hexo常用简写：</div><div class="line">$ hexo n == hexo new</div><div class="line">$ hexo g == hexo generate</div><div class="line">$ hexo s == hexo server</div><div class="line">$ hexo d == hexo deploy</div><div class="line"></div><div class="line">hexo常用组合：</div><div class="line">$ hexo d -g     <span class="comment">#生成部署</span></div><div class="line">$ hexo s -g     <span class="comment">#生成预览</span></div></pre></td></tr></table></figure>
<h3 id="部署-发布到github"><a href="#部署-发布到github" class="headerlink" title="部署/发布到github"></a>部署/发布到github</h3><h4 id="登录github"><a href="#登录github" class="headerlink" title="登录github"></a>登录github</h4><ul>
<li>注册并登录到github之后、在主页面选择”New repository”</li>
</ul>
<h4 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h4><ul>
<li>进入仓库创建页面、输入”yourname”.github.io (这个github.io官方规定格式、必须这样写。)</li>
<li>检查SSH Keys的设置、一般在c:\用户\用户名. ssh这个文件夹(id_rsa、id_rsa.pub)</li>
</ul>
<h4 id="配置ssh-key"><a href="#配置ssh-key" class="headerlink" title="配置ssh key"></a>配置ssh key</h4><ul>
<li>如果有忽略此步骤、没有.ssh这个文件、那么需要生成新的key：<code>$ ssh-keygen -t rsa -C &quot;name@mail.com&quot;</code></li>
<li>添加ssh key到GitHub：打开id_rsa.pub文件、复制全部内容</li>
<li>登录Github。View profile and more—&gt;Settings—&gt;SSH and GPG keys—&gt;New SSH key 将刚才复制的内容粘贴到文本框中、写个标题、确认即可。</li>
<li>测试连接：<code>$ ssh -T git@github.com</code>、如果成功的话会弹出确认连接信息、选择yes即可、测试连接后再c:\用户\用户名. ssh文件夹会多出一个known-hosts信任文件。</li>
</ul>
<h4 id="推送代码"><a href="#推送代码" class="headerlink" title="推送代码"></a>推送代码</h4><ul>
<li><p>配置hexo deploy部署到github：打开根目录_config.yml文件最顶端如下修改并保存</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repository: https://github.com/francis19870605/francis19870605.github.io.git</div><div class="line">  branch: master</div><div class="line"># :号后边一定要加空格。</div></pre></td></tr></table></figure>
</li>
<li><p>现在就可以<code>$hexo d -g</code>直接推代码到github中了</p>
</li>
</ul>
<h3 id="用markdown写文章"><a href="#用markdown写文章" class="headerlink" title="用markdown写文章"></a>用markdown写文章</h3><h4 id="使用atom工具并安装如下插件"><a href="#使用atom工具并安装如下插件" class="headerlink" title="使用atom工具并安装如下插件"></a>使用atom工具并安装如下插件</h4><ul>
<li>markdown-scroll-sync</li>
<li>linter-markdown</li>
<li>markdown-writer</li>
<li>markdown-toc</li>
<li>markdown-pdf</li>
<li>markdown-preview</li>
</ul>
<h4 id="为hexo安装插件"><a href="#为hexo安装插件" class="headerlink" title="为hexo安装插件"></a>为hexo安装插件</h4><ul>
<li><p>markdown是纯文本标记语言，需要解析器来渲染。前面的markdown-preview是atom里的解析器。现在我们在hexo生成html博客的时候还需要自己的解析器。</p>
</li>
<li><p>hexo知道的hexo-renderer-marked解析器，不够吊，要换成hexo-renderer-markdown-it。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm un hexo-renderer-marked -save</div><div class="line">$ npm i hexo-renderer-markdown-it</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="编辑文章"><a href="#编辑文章" class="headerlink" title="编辑文章"></a>编辑文章</h4><ul>
<li><p>使用atom打开$blog\source_posts\下的hello-world.md文档进行编辑。</p>
</li>
<li><p><code>$ hexo g</code>    # 生成静态html文件</p>
</li>
<li><p><code>$ hexo s</code>    # 本地查看效果</p>
</li>
<li><p><code>$ hexo d</code>    # 发布到github</p>
</li>
</ul>
<h3 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h3><ul>
<li>搭建好博客后、可以用GitHub的二级域名访问、但是终归没有自己的域名舒服、所以需要设置自己的域名绑定到这个博客上。<ul>
<li>域名服务商的设置<ul>
<li>添加2条A记录<ul>
<li>@—&gt;192.30.252.154</li>
<li>@—&gt;192.30.252.153</li>
</ul>
</li>
<li>添加一条CNAME<ul>
<li>CNAME—&gt;francis19870605.github.io</li>
</ul>
</li>
</ul>
</li>
<li>博客添加CNAME文件<ul>
<li>进入博客目录、在source目录下新建CNAME文件、写入域名即可</li>
</ul>
</li>
<li><code>$ hexo d -g</code></li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搭建流程：&quot;&gt;&lt;a href=&quot;#搭建流程：&quot; class=&quot;headerlink&quot; title=&quot;搭建流程：&quot;&gt;&lt;/a&gt;搭建流程：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;hexo是个博客框架，编辑好博客后，用在git shell上，gitshell上有个 hexo g
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="http://yoursite.com/2017/06/09/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2017/06/09/我的第一篇文章/</id>
    <published>2017-06-09T03:48:54.000Z</published>
    <updated>2017-06-09T06:15:15.672Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正文内容"><a href="#正文内容" class="headerlink" title="正文内容"></a>正文内容</h3><p>连翘一睁眼，发现自己重回到了1987年，上一世，他是霸道冷酷的军长，她是认狼为友的傻子，她错过良人，被身边那个“最好”的朋友抢走，害她凄惨致死，这一世，一切机缘等着她！看她如何利用美食发家致富！谁知道她准备的一系列技能还没使呢，那霸道的男人直接用胳膊圈着她，“除了我，你还能嫁谁！”<br>人人都说她是个小三，利用腹中之子夺去了好朋友的男朋友，就连那个男人也一直都是这样认为的。<br>所以，婚后，那个男人继续和好朋友恩爱缠绵，徒留一个虚名给她。<br>她却甘之如饴，直到那个男人的出现，彻底的打乱了她平静的生活。<br>&amp;amp;&amp;amp;&amp;amp;&amp;amp;&amp;amp;<br>据说有个如冷面阎罗一般的人物，他性情阴翳冷漠，手段狠绝残忍，女人望而兴叹却不敢靠近的男人，即将成为她们的顶头上司，公司里个个都如临大敌，人心惶惶。<br>八年后再见，他不再是当年那个狂妄到目中无人的臭小子，却是残忍到目中无人的冷面阎罗，连对女人和小孩都没有一丝同情和怜惜，而她早已是他人妇，还有一个8岁大的儿子，再见面，她避他如蛇蝎，生怕和他扯上一丁点的关系。<br>再见面，他亦有美人在侧，听说两个月后就订婚。<br>再见面，在某个路口偶尔遇见，眼里闪过一抹惊喜，然后穆浅浅学会了不动声色，平静地道一声“你好！”<br>再见面，楼川森竟是那个在她眼泪掉下来之前，用宽厚大大的手掌蒙住她的眼睛，在她耳边轻声说道，“你的眼睛只有微笑的时候，才是最好看的。”<br>&amp;&amp;&amp;<br>后来，楼川森说，穆浅浅就是一个狼心狗肺的女人，从来都看不到他的好，他却心甘情愿的去犯贱。<br>而穆浅浅说，楼川森是一味能让人上瘾的毒药，明明害怕他，却又无可救药的迷恋他。<br>&amp;&amp;&amp;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;正文内容&quot;&gt;&lt;a href=&quot;#正文内容&quot; class=&quot;headerlink&quot; title=&quot;正文内容&quot;&gt;&lt;/a&gt;正文内容&lt;/h3&gt;&lt;p&gt;连翘一睁眼，发现自己重回到了1987年，上一世，他是霸道冷酷的军长，她是认狼为友的傻子，她错过良人，被身边那个“最好”的朋友
    
    </summary>
    
      <category term="test" scheme="http://yoursite.com/categories/test/"/>
    
    
  </entry>
  
</feed>
